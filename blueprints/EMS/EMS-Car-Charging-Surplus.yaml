blueprint:
  name: "[EMS] - [Car] - [Charging automation] - Surplus"
  description:
    This script provides 3 different types of chaging (Default, Trip &
    Surplus) and adopts the settings of the charger settings accordingly. In this
    scenario the go-e Charger was used but the automation can be used for other chargers
    asw well as it is generic.
  domain: automation
  source_url: https://raw.githubusercontent.com/gsaurer/ha-ems/main/blueprints/EMS/EMS-Car-Charging-Surplus.yaml
  input:
    ems_enabled:
      name: EMS - Enabled
      description:
        Switch that defines if the Energy Managment system should be turned
        on. It's the main switch for your EMS systm. If you don't have one create
        a new one directly in the blueprint. Turning it off this will disable this
        automation.
      selector:
        entity:
          domain:
            - input_boolean
          multiple: false
    ems_charging_type:
      name: Charging type
      description:
        This defines which type of charging should be used - Potential
        values of this entity are (Default, Surplus, Trip, Stop). If you don't have
        this entity create it directly in the blueprint and add it to your it to your
        dashboard to select what charging type you want.
      selector:
        entity:
          filter:
            - domain:
                - input_select
          multiple: false
    ems_charger_current:
      name: Charger - Requested current
      description: The current value of the charger
      selector:
        entity:
          filter:
            - domain:
                - number
          multiple: false
    ems_charger_forced_state:
      name: Charger - Forced state
      description:
        Defines the forced state of the charger - wether it is Neutral
        or it should start charging.
      selector:
        entity:
          filter:
            - domain:
                - select
          multiple: false
    ems_surplus_potential_power_mean:
      name: Surplus - potential power (mean)
      description:
        Defines the potential power that is available for car charging.
        For that create a helper sensor that calculates the value based on your Perference.
        It is  recommended to leverage the ha-average  integration and create an average
        value (5min) for the current avaialble energy to smooth peaks.
      selector:
        entity:
          domain:
            - sensor
          multiple: false
    ems_surplus_max_power_from_grid:
      name: Surplus - Max power from grid
      description:
        Defines how much power should be used from the grid for surplus
        charging at a maximum. Best practice is to set it to ~50 W to smooth the charging
      default: 50
      selector:
        number:
          min: 0.0
          max: 300.0
          unit_of_measurement: W
          step: 1.0
          mode: slider
    ems_surplus_min_power_available:
      name: Surplus - Min power available to start
      description:
        Defines the minimum power that needs to be avaialble to start the
        surplus charging. This depends on your car what is the minimum charging W
        it can use as well as how much you want to charge using the grid. If your
        car can start with 6A set it to 1000 W (start a bit earlier instead of 1380W)
      default: 1000
      selector:
        number:
          min: 0.0
          max: 3600.0
          unit_of_measurement: W
          step: 1.0
          mode: slider
    ems_car_battery_percentage_now:
      name: Car - Battery percentage
      description: The current battery level of the car
      selector:
        entity:
          filter:
            - device_class:
                - battery
            - domain:
                - sensor
          multiple: false
variables:
  ems_surplus_potential_power_mean: !input ems_surplus_potential_power_mean
  ems_surplus_max_power_from_grid: !input ems_surplus_max_power_from_grid
  ems_surplus_min_power_available: !input ems_surplus_min_power_available
trigger:
  - platform: time_pattern
    seconds: /5
condition:
  - condition: state
    entity_id: !input ems_enabled
    state: "on"
  - condition: state
    entity_id: !input ems_charging_type
    state: Surplus
action:
  - variables:
      minCurrentToCharge: "{{ 6 }}"
      maxCurrentToCharge: "{{ 16 }}"
      powerAvailable:
        "{{ states(ems_surplus_potential_power_mean) | int(0) + ems_surplus_max_power_from_grid
        | int(0) }}"
      minPowerToCharge: "{{ ems_surplus_min_power_available }}"
      currentAvailable:
        "{{ [[ (powerAvailable) // 230, minCurrentToCharge] | max, maxCurrentToCharge]
        | min }}"
  - service: number.set_value
    metadata: {}
    data:
      value: "{{ currentAvailable }}"
    target:
      entity_id: !input ems_charger_current
    alias: Set Current
  - alias: Stop charging below minPowerToCharge
    if:
      - condition: template
        value_template: "{{ powerAvailable < minPowerToCharge }}"
        alias: Below minPowerToCharge
    then:
      - service: select.select_option
        metadata: {}
        data:
          option: Don't charge
        target:
          entity_id: !input ems_charger_forced_state
        alias: Stop Charging
    else: []
    enabled: true
  - alias: Start charging above minPowerToCharge
    if:
      - condition: template
        value_template: "{{ powerAvailable > minPowerToCharge }}"
        alias: Above minPowerToCharge
    then:
      - service: select.select_option
        metadata: {}
        data:
          option: Neutral
        target:
          entity_id: !input ems_charger_forced_state
        alias: Start charging
    else: []
    enabled: true
mode: single
